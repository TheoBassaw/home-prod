- become: false
  hosts: localhost
  name: Setup Initial Infrastructure
  tasks:
    - name: Deploying Management Plane
      environment:  
        TF_HTTP_USERNAME: "{{ lookup('ansible.builtin.env', 'GITLAB_USER') }}"
        TF_HTTP_PASSWORD: "{{ lookup('ansible.builtin.env', 'GITLAB_PAT') }}"
      community.general.terraform:
        project_path: 'terraform/management-plane'
        force_init: true
        complex_vars: true
        init_reconfigure: true
        state: present
        variables:
          ZEROTIER_CENTRAL_TOKEN: "{{ lookup('ansible.builtin.env', 'ZEROTIER_CENTRAL_TOKEN') }}"
          VULTR_API_KEY: "{{ lookup('ansible.builtin.env', 'VULTR_API_KEY') }}"
    
    - meta: refresh_inventory

#- become: true
#  hosts: ingress_routers:oci_k8s_masters
#  gather_facts: false
#  name: CIS-Benchmarking
#  vars_files:
#    - vars/cis-benchmark-default.yaml
#  pre_tasks:
#    - name: Wait For Hosts To Be Availiable
#      ansible.builtin.wait_for:
#        timeout: 300
#        port: 22
#        host: "{{ (ansible_ssh_host|default(ansible_host))|default(inventory_hostname) }}"
#      connection: local
#      become: false

#    - name: Gather Facts
#      setup:
#  roles:
#    - role: UBUNTU22-CIS

- become: true
  hosts: ingress_routers
  name: Configuring Ingress Routers
  tasks:
    - name: Installing Zerotier
      ansible.builtin.import_role:
        name: zerotier

    - name: Applying Common Packages
      ansible.builtin.import_role:
        name: common-packages

    - name: Applying DNS Server Configuration
      ansible.builtin.import_role:
        name: authoritative-dns

    - name: Gathering New Facts
      ansible.builtin.setup:

    - name: Applying Ingress Router Configuration
      ansible.builtin.import_role:
        name: ingress-router
    
    - name: Flushing Handlers Before Continuing
      meta: flush_handlers

    - name: Sleeping For 5 Minutes - Please Manually Join Zerotier Network
      ansible.builtin.wait_for:
        timeout: 300
        host: "{{ item }}"
        port: 22
      loop:
        - "{{ hostvars[groups['ingress_routers'][0]]['ansible_zt1']['ipv4']['address'] }}"
        - "{{ hostvars[groups['ingress_routers'][1]]['ansible_zt1']['ipv4']['address'] }}"
      connection: local
      become: false

- become: true
  hosts: oci_k8s_masters
  name: Creating Management Cluster
  tasks:
    - name: Installing Zerotier
      ansible.builtin.import_role:
        name: zerotier

    - name: Gather new facts
      ansible.builtin.setup:

    - name: Creating K8S Cluster
      environment:
        GITLAB_TOKEN: "{{ lookup('ansible.builtin.env', 'GITLAB_PAT') }}"
      vars:
        cilium_service_host: "{{ hostvars[groups['oci_k8s_masters'][0]]['ansible_' + interface]['ipv4']['address'] }}"
        rke2_init_server: "{{ hostvars[groups['oci_k8s_masters'][0]]['ansible_' + interface]['ipv4']['address'] }}"
        kubeconfig_location: "{{ lookup('ansible.builtin.env', 'HOME') }}/.kube/management-cluster.yaml"
        doppler_token: "{{ lookup('ansible.builtin.env', 'MANAGEMENT_CLUSTER_DOPPLER_TOKEN') }}"
        rke2_token: "{{ lookup('ansible.builtin.env', 'MANAGEMENT_CLUSTER_RKE2_TOKEN') }}"
        gitlab_owner: "{{ lookup('ansible.builtin.env', 'GITLAB_USER') }}"
      ansible.builtin.import_role:
        name: k8s